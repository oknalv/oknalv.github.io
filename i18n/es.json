{
    "menu": "Menú",
    "settings": "Ajustes",
    "home": "Inicio",
    "experience": "Experiencia profesional",
    "education": "Educación",
    "language": "Idioma",
    "es": "español",
    "theme": "Tema",
    "light": "claro",
    "dark": "oscuro",
    "skills": "Habilidades",
    "projects": "Proyectos personales",
    "contact": "Contacto",
    "header": "Desarrollador de software",
    "hello": "Hola, mi nombre es Eliot y te doy la bienvenida a mi página web",
    "myself": "Soy un desarrollador web español y he hecho esta página para mostrar mi CV y mis habilidades de programación de front end.",
    "cvscode_technologies": "Esta página está hecha con React, i18next y Vite.",
    "vscode": "Como puedes ver, he intentado imitar el diseño, la distribución y algunas de las funcionalidades de Visual Studio Code, uno de los principales IDEs que uso en el trabajo así como en casa. Por lo tanto, esta web no está hecha para ser abierta en un dispositivo móvil.",
    "present": "Presente",
    "note": "Nota:",
    "full_stack": "Desarrollador full stack",
    "bnp": "BNP Paribas Securities Services, Lisboa (Portugal)",
    "bnp0": "Continuación de las responsabilidades de la experiencia anterior en Agap2IT pero como trabajador interno.",
    "consultant_sw_engineer": "Consultor/ingeniero de software",
    "agap2": "agap2IT, Lisboa (Portugal)",
    "agap20": "Desarrollador full stack para BNP Paribas Securities Services. Desarrollo de herramientas web de negocio usando frameworks y otras tecnologías desarrolladas por la empresa, basadas en Spring Boot, Angular y SQL. Otras tecnologías usadas: JasperReports, Jenkins, SonarQube, Jira.",
    "altran": "Altran, Lisboa (Portugal)",
    "altran0": "Consultoría de ingeniería de software para KLx (parte del grupo Crédit Agricole).",
    "akka": "Akka Technologies, Lyon (Francia)",
    "akka0": "Desarrollo de un servidor web desde cero, usando Python, conectado a una prueba de concepto de un coche autónomo que envía datos de sus sensores. Su propósito es servir esos datos a una implementación posterior de una interfaz web para mostrarlos de una manera más legible para el ser humano.",
    "akka1": "Desarrollo de una plataforma web desde cero para la gestión de los datos de los proyectos de uno de los departamentos de la empresa, desarrollada usando Angular y Angular Material en el front end, y Node.js, Express y TypeScript en el back end. La base de datos utilizada es en MySQL. La metodología para este proyecto es Scrum en un equipo distribuido.",
    "akka2": "Desarrollo de un programa para el cliente Acore que se comunica con un PLC que controla rectificadores. El programa está desarrollado en C# usando WPF y Entity Framework con MySQL.",
    "akka_note": "Antes de empezar a trabajar en Lyon, estuve durante un mes (el mes de agosto) en un programa de formación llamado The Akkadey y llevado a cabo por Akka Suiza en Ginebra. La formación consistía en la mejora de soft skills con alrededor de 70 personas de diferentes partes de Europa y el idioma de trabajo fue el inglés. Después de ese mes, me enviaron a Akka Francia en Lyon con varios de mis compañeros de Ginebra.",
    "sw_engineer": "Ingeniero de software",
    "imatia": "Imatia Innovation, Ourense (España)",
    "imatia0": "Desarrollo y mantenimiento de una aplicación web (SPA) de gestión logística para Inditex. En el front end, esta aplicación utiliza JavaScript puro con algo de jQuery (manipulación del DOM, manejo de promesas y comunicación con la API REST del back end), Underscore (plantillas) y Backbone (routing), usando también la API de IndexedDB para almacenar datos temporales. En el back end, esta aplicación usa Spring para la API REST así como para el gestor de inyección de dependencias, usando sentencias SQL complejas en la capa de la base de datos (DB2) para consultar y añadir datos. Este proyecto está desarrollado con la metodología Scrum mezclada con un poco de Kanban en un equipo distribuido.",
    "junior": "Programador junior",
    "plexus": "Tecnologías Plexus, Ourense (España)",
    "plexus0": "Mantenimiento de software para Barceló Viajes.",
    "sw_engineer_rd": "Ingeniero de software en el departamento de I+D",
    "redegal": "Redegal, Ourense (España)",
    "redegal0": "Desarrollo de un sistema de clustering de clientes para el CMS PrestaShop usando Spark MLlib.",
    "redegal1": "Desarrollo de una interfaz web de un sistema de optimización de rutas para servicios de recogida de basura, usando AngularJS y LeafletJS en el front end, Node.js en el back end y un servidor OSRM.",
    "intern": "Prácticas de administrador de sistemas",
    "bueu": "Concello de Bueu, Bueu (España)",
    "bueu0": "Administrador de sistemas en el Ayuntamiento y la Policía Local.",
    "bachelor": "Grado en Ingeniería Informática",
    "uvigo": "Universidade de Vigo, Campus de Ourense, Ourense (España)",
    "associate": "Técnico Superior en Administración de Sistemas Informáticos en Red",
    "rodeira": "IES de Rodeira, Cangas do Morrazo (España)",
    "courses": "Cursos y certificaciones",
    "angular": "Curso de iniciación a Angular 6",
    "vitae": "Vitae Consultores, A Coruña (España)",
    "scrum": "Curso de Scrum con certificado Scrum Manager Expert",
    "toeic": "Certificado de inglés TOEIC B2",
    "multimedia": "Multimedia School, Ourense (España)",
    "technical": "Habilidades técnicas",
    "programming": "Programación",
    "front_end": "Front end",
    "languages": "Idiomas",
    "frameworks_libraries": "Frameworks y bibliotecas",
    "back_end": "Back end",
    "transversal": "Transversal",
    "methodologies": "Metodologías",
    "spanish": "Español: ★★★★★★",
    "galician": "Gallego: ★★★★★★",
    "english": "Inglés: ★★★★★☆",
    "portuguese": "Portugués: ★★★★★☆",
    "french": "Francés: ★★★☆☆☆",
    "polish": "Polaco: ★★☆☆☆☆",
    "finnish": "Finés: ★☆☆☆☆☆",
    "page": "Página:",
    "code": "Código:",
    "screenshots": "Capturas de pantalla",
    "video": "Vídeo",
    "oppi_header": "App web para practicar la flexión de palabras en finés",
    "oppi0": "Oppi es una web app que hice para mejorar mi experiencia de aprendizaje de la flexión de las palabras en finés. Está desarrollada en Angular y usa la IndexedDB para almacenar datos.",
    "oppi1": "El funcionamiento es simple: primero se busca una palabra en el input de búsqueda y después la app genera una tabla que hay que rellenar. Después de hacerlo, se presiona el botón de chequear y la app resalta las palabras que se metieron bien y mal con colores diferentes. También tiene la opción de ver la flexión de la palabra directamente y la opción de obtener una palabra aleatoria. Tiene un tutorial explicando mejor cómo funciona dentro de la app que se muestra la primera vez que se usa.",
    "oppi2": "La hice PWA para que pueda tenerse en el teléfono como si fuese una app nativa. Como no tiene back end para traerse las palabras (está hosteado en GitHub Pages), necesita tener todas las palabras de antemano para funcionar. Para hacer eso, la primera vez que se carga en el navegador, se baja un archivo con alrededor de 58000 palabras que extraje de Wiktionary usando un script en Python, y guarda esas palabras en la IndexedDB, entonces no tiene que bajarlas otra vez cada vez que se usa. Teniendo eso en cuenta, la primera vez que carga necesita varios segundos para hacerlo, por lo que hay que ser paciente.",
    "piollo_header": "Cliente web para el módulo de la cámara de la Raspberry Pi",
    "piollo0": "Piollo es un cliente web para el módulo de la cámara de la Raspberry Pi que usa web sockets para streamear vídeo. El front end está desarrollado en AngularJS, aunque quiero cambiarlo por otra tecnología en un futuro, y el back end está desarrollado desde cero en Python usando el módulo picamera de Python. No he utilizado ningún framework web porque me parecía interesante hacerlo por mí mismo para aprender como usar sockets en este lenguaje.",
    "serkis": "keypointextractor y serkisplugin",
    "serkis_header": "Tracking de movimientos faciales y control de movimiento de un modelo 3D en Blender",
    "serkis0": "Este es mi proyecto de fin de grado. Consiste en dos subproyectos: el primero, keypointextractor, es un programa que extrae puntos clave faciales de un vídeo y el segundo, serkisplugin, es un plugin para Blender que usa los puntos extraídos para animar un modelo 3D de una cara.",
    "serkis1": "Para este proyecto, he utilizado Python con las bibliotecas dlib, OpenCV y Qt para keypointextractor y Python con la API de Blender para serkisplugin.",
    "grissonne_header": "Versión web del Carcassonne",
    "grissonne0": "Versión web del Carcassonne, un popular juego de mesa, hecho con el objetivo de aprender React. Está pensado para ser jugado en pantallas grandes, no está diseñado para ser abierto en dispositivos móviles.",
    "new": "¡Nuevo!",
    "cvscode_modal": "He hecho una nueva versión de mi CV web imitando el estilo del vscode, se llama CVscode. Está diseñado para abrirse en navegadores de escritorio, así que si estás en escritorio, considera echarle un vistazo.",
    "cvscode_open": "Ir a CVscode",
    "stay_here": "Quedarse aquí",
    "go_to_cvscode": "Ir a CVscode, la nueva versión de esta web",
    "cvscode": "CVscode",
    "cvscode_header": "Mi CV web en el estilo del vscode",
    "cvscode0": "Está hecho en React y tiene algunos de los componentes del vscode, como las pestañas o el explorador de archivos. Está aún sin terminar, tengo pensado añadir más cosas en el futuro.",
    "warning": "Aviso",
    "warning_mobile": "Esta página no fue diseñada para ser mostrada en un dispositivo móvil, devería abrirse en un navegador de escritorio.",
    "go_mobile": "Ir a la versión móvil"
}
